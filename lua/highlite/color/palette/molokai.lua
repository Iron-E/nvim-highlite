--- @type highlite.color.palette.get
local function get(bg, get_terminal)
	local palette, terminal_palette
	if bg ~= 'light' then
		if get_terminal then
			terminal_palette =
			{
				[1] = "",
				[2] = "",
				[3] = "",
				[4] = "",
				[5] = "",
				[6] = "",
				[7] = "",
				[8] = "",
				[9] = "",
				[10] = "",
				[11] = "",
				[12] = "",
				[13] = "",
				[14] = "",
				[15] = "",
				[16] = "",
			}
		end

		palette =
		{
			annotation = 0xA6E22E,
			attribute = 0xA6E22E,
			bg = 0x1B1D1E,
			bg_contrast_high = 0x465457,
			bg_contrast_low = 0x293739,
			boolean = 0xAE81FF,
			buffer_active = 0x8F8F8F,
			buffer_alternate = 0xFFE792,
			buffer_current = 0x403D3D,
			character = 0xE6DB74,
			character_special = 0xF92672,
			class = 0x66D9EF,
			comment = 0x7E8E91,
			comment_documentation = 0x7E8E91,
			conditional = 0xF92672,
			constant = 0xAE81FF,
			constant_builtin = 0x66D9EF,
			constructor = 0x66D9EF,
			decorator = 0xA6E22E,
			define = 0x66D9EF,
			diff_add = 0x13354A,
			diff_change = 0x4C4745,
			diff_delete = 0x1E0010,
			enum = 0x66D9EF,
			error = 0xFF0000,
			event = 0xF92672,
			field = 0xFD971F,
			field_enum = 0xAE81FF,
			float = 0xAE81FF,
			fold = 0x000000,
			func = 0xA6E22E,
			func_builtin = 0x66D9EF,
			hint = 0xD3D3D3,
			identifier = 0xFD971F,
			include = 0xA6E22E,
			info = 0xADD8E6,
			interface = 0x66D9EF,
			keyword = 0xF92672,
			keyword_coroutine = 0xF92672,
			keyword_function = 0xF92672,
			keyword_operator = 0xF92672,
			keyword_return = 0xF92672,
			label = 0xE6DB74,
			loop = 0xF92672,
			macro = 0xC4BE89,
			message = 0xE6DB74,
			method = 0xA6E22E,
			namespace = 0xFD971F,
			number = 0xAE81FF,
			ok = 0x90EE90,
			operator = 0xF92672,
			parameter = 0xFD971F,
			preproc = 0xA6E22E,
			preproc_conditional = 0xA6E22E,
			property = 0xFD971F,
			punctuation = 0x8F8F8F,
			punctuation_bracket = 0x8F8F8F,
			punctuation_delimiter = 0x8F8F8F,
			punctuation_special = 0x8F8F8F,
			search = 0xFFE792,
			select = 0x403D3D,
			special = 0x66D9EF,
			statement = 0xF92672,
			storage = 0xFD971F,
			string = 0xE6DB74,
			string_escape = 0xF92672,
			string_regex = 0xE6DB74,
			string_special = 0xF92672,
			structure = 0x66D9EF,
			syntax_error = 0x660000,
			tag = 0xF92672,
			tag_attribute = 0xF92672,
			tag_delimiter = 0xF92672,
			text = 0xF8F8F2,
			text_contrast_bg_high = 0x8F8F8F,
			text_contrast_bg_low = 0x7E8E91,
			text_environment = 0x7E8E91,
			text_environment_name = 0xE6DB74,
			text_literal = 0x7E8E91,
			text_reference = 0xFD971F,
			throw = 0xA6E22E,
			todo = 0x1B1D1E,
			type = 0x66D9EF,
			type_builtin = 0x66D9EF,
			type_parameter = 0x66D9EF,
			uri = 0x808080,
			variable = 0xFD971F,
			variable_builtin = 0xFD971F,
			warning = 0xFFA500,
		}
	else
		if get_terminal then
			terminal_palette =
			{
				[1] = "",
				[2] = "",
				[3] = "",
				[4] = "",
				[5] = "",
				[6] = "",
				[7] = "",
				[8] = "",
				[9] = "",
				[10] = "",
				[11] = "",
				[12] = "",
				[13] = "",
				[14] = "",
				[15] = "",
				[16] = "",
			}
		end

		palette =
		{
			annotation = 0xA6E22E,
			attribute = 0xA6E22E,
			bg = 0x1B1D1E,
			bg_contrast_high = 0x465457,
			bg_contrast_low = 0x293739,
			boolean = 0xAE81FF,
			buffer_active = 0x8F8F8F,
			buffer_alternate = 0xFFE792,
			buffer_current = 0x403D3D,
			character = 0xE6DB74,
			character_special = 0xF92672,
			class = 0x66D9EF,
			comment = 0x7E8E91,
			comment_documentation = 0x7E8E91,
			conditional = 0xF92672,
			constant = 0xAE81FF,
			constant_builtin = 0x66D9EF,
			constructor = 0x66D9EF,
			decorator = 0xA6E22E,
			define = 0x66D9EF,
			diff_add = 0x13354A,
			diff_change = 0x4C4745,
			diff_delete = 0x1E0010,
			enum = 0x66D9EF,
			error = 0xFF0000,
			event = 0xF92672,
			field = 0xFD971F,
			field_enum = 0xAE81FF,
			float = 0xAE81FF,
			fold = 0x000000,
			func = 0xA6E22E,
			func_builtin = 0x66D9EF,
			hint = 0xD3D3D3,
			identifier = 0xFD971F,
			include = 0xA6E22E,
			info = 0xADD8E6,
			interface = 0x66D9EF,
			keyword = 0xF92672,
			keyword_coroutine = 0xF92672,
			keyword_function = 0xF92672,
			keyword_operator = 0xF92672,
			keyword_return = 0xF92672,
			label = 0xE6DB74,
			loop = 0xF92672,
			macro = 0xC4BE89,
			message = 0xE6DB74,
			method = 0xA6E22E,
			namespace = 0xFD971F,
			number = 0xAE81FF,
			ok = 0x90EE90,
			operator = 0xF92672,
			parameter = 0xFD971F,
			preproc = 0xA6E22E,
			preproc_conditional = 0xA6E22E,
			property = 0xFD971F,
			punctuation = 0x8F8F8F,
			punctuation_bracket = 0x8F8F8F,
			punctuation_delimiter = 0x8F8F8F,
			punctuation_special = 0x8F8F8F,
			search = 0xFFE792,
			select = 0x403D3D,
			special = 0x66D9EF,
			statement = 0xF92672,
			storage = 0xFD971F,
			string = 0xE6DB74,
			string_escape = 0xF92672,
			string_regex = 0xE6DB74,
			string_special = 0xF92672,
			structure = 0x66D9EF,
			syntax_error = 0x660000,
			tag = 0xF92672,
			tag_attribute = 0xF92672,
			tag_delimiter = 0xF92672,
			text = 0xF8F8F2,
			text_contrast_bg_high = 0x8F8F8F,
			text_contrast_bg_low = 0x7E8E91,
			text_environment = 0x7E8E91,
			text_environment_name = 0xE6DB74,
			text_literal = 0x7E8E91,
			text_reference = 0xFD971F,
			throw = 0xA6E22E,
			todo = 0x1B1D1E,
			type = 0x66D9EF,
			type_builtin = 0x66D9EF,
			type_parameter = 0x66D9EF,
			uri = 0x808080,
			variable = 0xFD971F,
			variable_builtin = 0xFD971F,
			warning = 0xFFA500,
		}
	end

	return palette, terminal_palette
end

return get
