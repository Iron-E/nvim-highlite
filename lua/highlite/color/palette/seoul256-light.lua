--- @type highlite.color.palette.get
local function get(bg, get_terminal)
	local palette, terminal_palette
	if bg ~= 'light' then
		if get_terminal then
			terminal_palette =
			{
				[1] = "",
				[2] = "",
				[3] = "",
				[4] = "",
				[5] = "",
				[6] = "",
				[7] = "",
				[8] = "",
				[9] = "",
				[10] = "",
				[11] = "",
				[12] = "",
				[13] = "",
				[14] = "",
				[15] = "",
				[16] = "",
			}
		end

		palette =
		{
			annotation = 0xBDBB72,
			attribute = 0xBDBB72,
			bg = 0x4B4B4B,
			bg_contrast_high = 0x727272,
			bg_contrast_low = 0x3F3F3F,
			boolean = 0x999ABD,
			buffer_active = 0xBE9873,
			buffer_alternate = 0x007299,
			buffer_current = 0x007173,
			character = 0xE09B99,
			character_special = 0xFFBD98,
			class = 0x97DDDF,
			comment = 0x719872,
			comment_documentation = 0x719872,
			conditional = 0x98BEDE,
			constant = 0x6FBCBD,
			constant_builtin = 0xFFBD98,
			constructor = 0xFFBD98,
			decorator = 0xDFDEBD,
			define = 0xE19972,
			diff_add = 0x98BC99,
			diff_change = 0x719CDF,
			diff_delete = 0xE12672,
			enum = 0x97DDDF,
			error = 0xFF0000,
			event = 0x719CDF,
			field = 0xFFBFBD,
			field_enum = 0x6FBCBD,
			float = 0xFFDE99,
			fold = 0x565656,
			func = 0xDFDEBD,
			func_builtin = 0xFFBD98,
			hint = 0xD3D3D3,
			identifier = 0xFFBFBD,
			include = 0xE19972,
			info = 0xADD8E6,
			interface = 0x97DDDF,
			keyword = 0xE17899,
			keyword_coroutine = 0xE17899,
			keyword_function = 0xE17899,
			keyword_operator = 0xE17899,
			keyword_return = 0xE17899,
			label = 0x98BC99,
			loop = 0x719CDF,
			macro = 0xE19972,
			message = 0xE19972,
			method = 0xDFDEBD,
			namespace = 0xFFBFBD,
			number = 0xFFDE99,
			ok = 0x90EE90,
			operator = 0xDEDD99,
			parameter = 0xFFBFBD,
			preproc = 0xBDBB72,
			preproc_conditional = 0xE19972,
			property = 0xFFBFBD,
			punctuation = 0xBE9873,
			punctuation_bracket = 0xBE9873,
			punctuation_delimiter = 0xBE9873,
			punctuation_special = 0xBE9873,
			search = 0x007299,
			select = 0x007173,
			special = 0xFFBD98,
			statement = 0x98BC99,
			storage = 0xDFBC72,
			string = 0x98BCBD,
			string_escape = 0xFFBD98,
			string_regex = 0x98BCBD,
			string_special = 0xFFBD98,
			structure = 0x97DDDF,
			syntax_error = 0x730B00,
			tag = 0xFFBD98,
			tag_attribute = 0xFFBD98,
			tag_delimiter = 0xFFBD98,
			text = 0xD9D9D9,
			text_contrast_bg_high = 0xBE9873,
			text_contrast_bg_low = 0x719872,
			text_environment = 0x719872,
			text_environment_name = 0x98BC99,
			text_literal = 0x719872,
			text_reference = 0xFFBFBD,
			throw = 0xE12672,
			todo = 0x333233,
			type = 0xDFBC72,
			type_builtin = 0xDFBC72,
			type_parameter = 0xDFBC72,
			uri = 0xE0BEBC,
			variable = 0xFFBFBD,
			variable_builtin = 0xFFBFBD,
			warning = 0xFFA500,
		}
	else
		if get_terminal then
			terminal_palette =
			{
				[1] = "",
				[2] = "",
				[3] = "",
				[4] = "",
				[5] = "",
				[6] = "",
				[7] = "",
				[8] = "",
				[9] = "",
				[10] = "",
				[11] = "",
				[12] = "",
				[13] = "",
				[14] = "",
				[15] = "",
				[16] = "",
			}
		end

		palette =
		{
			annotation = 0x727100,
			attribute = 0x727100,
			bg = 0xE1E1E1,
			bg_contrast_high = 0xBDBDBD,
			bg_contrast_low = 0xD9D9D9,
			boolean = 0xE17899,
			buffer_active = 0x9A7200,
			buffer_alternate = 0x70BDDF,
			buffer_current = 0xBCDEDE,
			character = 0xE17899,
			character_special = 0xE19972,
			class = 0x007173,
			comment = 0x719872,
			comment_documentation = 0x719872,
			conditional = 0x0099BD,
			constant = 0x007173,
			constant_builtin = 0xE19972,
			constructor = 0xE19972,
			decorator = 0x727100,
			define = 0xBE7572,
			diff_add = 0x719872,
			diff_change = 0x719CDF,
			diff_delete = 0xE12672,
			enum = 0x007173,
			error = 0xFF0000,
			event = 0x7299BC,
			field = 0x9A7599,
			field_enum = 0x007173,
			float = 0x9A7372,
			fold = 0xD1D0D1,
			func = 0x727100,
			func_builtin = 0xE19972,
			hint = 0xD3D3D3,
			identifier = 0x9A7599,
			include = 0xBE7572,
			info = 0xADD8E6,
			interface = 0x007173,
			keyword = 0xE17899,
			keyword_coroutine = 0xE17899,
			keyword_function = 0xE17899,
			keyword_operator = 0xE17899,
			keyword_return = 0xE17899,
			label = 0x719899,
			loop = 0x7299BC,
			macro = 0xBE7572,
			message = 0xE19972,
			method = 0x727100,
			namespace = 0x9A7599,
			number = 0x9A7372,
			ok = 0x90EE90,
			operator = 0xBE7572,
			parameter = 0x9A7599,
			preproc = 0x727100,
			preproc_conditional = 0xBE7572,
			property = 0x9A7599,
			punctuation = 0x9A7200,
			punctuation_bracket = 0x9A7200,
			punctuation_delimiter = 0x9A7200,
			punctuation_special = 0x9A7200,
			search = 0x70BDDF,
			select = 0xBCDEDE,
			special = 0xE19972,
			statement = 0x719899,
			storage = 0x9A7200,
			string = 0x009799,
			string_escape = 0xE19972,
			string_regex = 0x009799,
			string_special = 0xE19972,
			structure = 0x007173,
			syntax_error = 0xE09B99,
			tag = 0xE19972,
			tag_attribute = 0xE19972,
			tag_delimiter = 0xE19972,
			text = 0x616161,
			text_contrast_bg_high = 0x9A7200,
			text_contrast_bg_low = 0x719872,
			text_environment = 0x719872,
			text_environment_name = 0x719899,
			text_literal = 0x719872,
			text_reference = 0x9A7599,
			throw = 0xE12672,
			todo = 0xF1F1F1,
			type = 0x9A7200,
			type_builtin = 0x9A7200,
			type_parameter = 0x9A7200,
			uri = 0xE17899,
			variable = 0x9A7599,
			variable_builtin = 0x9A7599,
			warning = 0xFFA500,
		}
	end

	return palette, terminal_palette
end

return get
